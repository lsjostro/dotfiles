add_newline = false

format = """\
$cmd_duration\
$hostname\
$directory\
$git_branch\
$git_commit\
$git_status\
$git_state\
${custom.jj}\
${custom.jjstate}\
($character)\
"""

[character]
success_symbol = "[%](green)"
error_symbol = "[%](bold red)"

[line_break]
disabled = true

[directory]
fish_style_pwd_dir_length = 1
truncation_length = 1
truncate_to_repo = false
truncation_symbol = "…"
style = "italic"

[git_branch]
format = "[$symbol$branch]($style)"
style = "italic bold green"
symbol = " "
truncation_length = 16
truncation_symbol = "…"

[git_commit]
style = "cyan"

[git_state]
style = ""

[git_status]
format = '([$all_status$ahead_behind]($style))'
style = "fg:#00ac73"
modified = "[ 󰦒](yellow)"
deleted = "[ ✘](red)"
untracked = "[ ?](purple)"
staged = "[ 󰐖](cyan)"

[cmd_duration]
min_time = 1000
format = "⏳[$duration](bold yellow) "

[hostname]
ssh_only = false
format = "[$hostname](italic bold):"
disabled = false

[kubernetes]
disabled = false
style = ""

[custom.jj]
command = '''
  jj log --ignore-working-copy --no-graph --color never -r @ -T '
    surround(
      " \e[0;2;3m",
      "\e[0m",
      coalesce(
        surround(
          "\e[1;2;3m❝",
          "❞\e[0m",
          if(
            description.first_line().substr(0, 15).starts_with(description.first_line()),
            description.first_line().substr(0, 15),
            description.first_line().substr(0, 14) ++ "…"
          )
        ),
        "…"
      ),
    )
  '
'''
when = "jj root"

[custom.jjstate]
when = "jj root"
command = '''
 	jj log --ignore-working-copy --no-graph --color never -r @ -T '
	  surround(
	    " \e[2;3m",
	    "\e[0m",
	    separate(
	      " ",
	      surround("\e[0;1;95m ", "\e[0;2;3m", change_id.shortest()),
        surround("\e[0;35m󰸕 ", "\e[0m", bookmarks.join("╱")),
	      surround("\e[0;34m ",   "\e[0;2;3m", commit_id.shortest()),
	      if(conflict,  "󰂭"),
	      if(empty,     ""),
	      if(divergent, ""),
	      if(hidden,    "󰘓"),
	    )
	  )
	'
'''
